# -*- coding: utf-8 -*-
"""project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15VzZ9Kw4j-PYZIfy15NFFJldIAfIJEgn
"""

from tabulate import tabulate

class Cashier:

  # method spesial
  def __init__(self):
    """
    inisialisasi transaction
    """
    self.transaction = []

  # method inputan
  def add_item(self, nama_item, jumlah_item, harga_item):
    """
    Merupakan method untuk menambahkan item didalam keranjang.

    parameter :
      nama (string) : merupakan nama item yang dimasukkan didalam keranjang.
      jumlah (integer) : merupakan jumlah item yang dimasukkan kedalam keranjang.
      harga (integer) : merupakan harga satuan belanja yang akan dibeli.

    exception (pesan error) :
      pada exception akan ditampilkan jika tipe data yang dimasukkan tidak sesuai.

    """
    try:

      data={"nama_item": nama_item,
          "jumlah_item": jumlah_item,
          "harga_item": harga_item,
          "Total Harga" : jumlah_item * harga_item
            }

      self.transaction.append(data)

    except TypeError :
      print('Type data tidak sesuai')

  # method update nama item
  def update_item_name(self, nama_item, nama_baru):
    """
    Method untuk update nama

    parameter :
      nama (str) : berupa nama item yang dimasukkan

    raise ValueError(menampilkan pesan beserta error)
    """
    for item in self.transaction:
      if item ['nama_item'] == nama_item:
        if type('nama_baru') != str:
          raise ValueError('Nilai yang dimasukkan bukan tipe String')
        else:
          item['nama_item']= str(nama_baru)

  # method update jumlah item
  def updtae_item_jumlah(self, jumlah_item, jumlah_baru):
    """
    Method untuk update jumlah

    parameter :
      jumlah (int) : berupa jumlah item yang dimasukkan

    raise ValueError(menampilkan pesan beserta error)
    """
    for item in self.transaction:
      if item ['jumlah item'] == jumlah_item:
        if type('jumlah_baru') != int:
          raise ValueError('Nilai yang dimasukkan harus integer(angka)')
        else:
          item ['jumlah item'] = jumlah_baru
          item ['Total Harga'] = jumlah_baru * item['harga_item']

  # method update harga item
  def update_item_harga(self, harga_item, harga_baru):
    """
    Method untuk update harga

    parameter :
      harga (int) : berupa harga item yang dimasukkan

    raise ValueError(menampilkan pesan beserta error)
    """
    for item in self.transaction:
      if item ['harga item'] == harga_item:
        if type('harga_baru') != int:
          raise ValueError('Nilai yang dimasukkan harus integer(angka)')
        else:
          item ['Harga item'] = harga_baru
          item ['Total Harga'] = item['jumlah_item'] * harga_baru

  # method delete item
  def delete_item(self, nama_item):
    """
    Method untuk delete item

    parameter :
      nama (str) : berupa nama item yang ingin dihapus

    """
    for item in self.transaction:
      if item ['nama_item'] == nama_item:
        self.transaction.remove(item)

  # method reset transaction
  def reset_transaction(self):
    self.transaction=[]
    print(f'semua item berhasil didelete')

  def check_order(self):
    headers = ['Nama Item', 'Jumlah', 'Harga', 'Total Harga']

    rows = [[item["nama_item"], item["jumlah_item"], item["harga_item"], item['Total Harga']] for item in self.transaction]
    print(tabulate(rows, headers=headers, tablefmt='grid'))

  def total_price(self):
    total_price = sum(item['jumlah_item'] * item['harga_item'] for item in self.transaction)
    discount = 0

    if total_price > 500_000:
      total_bayar= total_price - (total_price * 0.1)
      print(f'selamat anda mendapatkan diskon 10 %, total belanjaan {total_bayar}')

    elif total_price > 300_000:
      total_bayar= total_price - (total_price * 0.08)
      print(f'selamat anda mendapatkan diskon 8 %, total belanjaan {total_bayar}')

    elif total_price > 200_000:
      total_bayar= total_price - (total_price * 0.05)
      print(f'selamat anda mendapatkan diskon 5 %, total belanjaan {total_bayar}')

    else :
      total_bayar = total_price

# intance class untuk test case
trnsct_123 = Cashier()

# test case 1
trnsct_123.add_item("Ayam Goreng", 2,20000)
trnsct_123.add_item("Pasta Gigi", 3,15000)
print(f'Item yang dibeli adalah : {trnsct_123.transaction}')

# test case 2
trnsct_123.delete_item('Pasta Gigi')
print(f'Item yang dibeli adalah : {trnsct_123.transaction}')

# test case 3
trnsct_123.reset_transaction()

# test case 4
trnsct_123.add_item('Ayam Goreng',2,20000)
trnsct_123.add_item('Pasta Gigi',3,15000)
trnsct_123.add_item('Mainan mobil',1, 200000)
trnsct_123.add_item('Mie instan',5, 3000)
print(trnsct_123.transaction)
print(" ")

trnsct_123.total_price()
print(" ")

trnsct_123.check_order()